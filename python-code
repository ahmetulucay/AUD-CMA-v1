# Ahmet Ulucay Drag-and-Carry Multiplication Algorithm v1 (AUD-CMA-v1)

def audcma_v1(n_str, b_str):
    n = [int(d) for d in n_str]
    base_digit = int(b_str[0])  # e.g., 2 from "222"

    # Step 1: Multiply each digit by the base digit
    result = [d * base_digit for d in n]

    # Step 2: Pad with (len(b_str)-1) zeros on both sides
    k = len(b_str)
    padded = [0] * (k - 1) + result + [0] * (k - 1)

    # Step 3: Perform drag-and-carry from right to left
    output = []
    carry = 0
    for i in range(len(padded) - 1, -1, -1):
        val = padded[i] + carry
        if i == k - 1:
            output.append(val)  # preserve leftmost as-is
        else:
            output.append(val % 10)
            carry = val // 10

    output.reverse()
    return int(''.join(map(str, output)))
